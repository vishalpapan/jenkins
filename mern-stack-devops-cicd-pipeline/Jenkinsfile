pipeline {
  agent {
    docker {
      image 'node:18-alpine'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock'
    }
  }
  
  stages {
    stage('Checkout') {
      steps {
        sh 'echo "Starting MERN Stack CI/CD Pipeline"'
        checkout scm
      }
    }
    
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        sh 'cd mern-stack-devops-cicd-pipeline && ls -ltr'
        sh 'apk add --no-cache docker-cli curl git'
        sh 'npm --version && docker --version'
      }
    }
    
    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "vishalpapan/task-manager-app:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'cd mern-stack-devops-cicd-pipeline && docker build -t ${DOCKER_IMAGE} .'
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                dockerImage.push()
            }
        }
      }
    }
    
    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "jenkins"
            GIT_USER_NAME = "vishalpapan"
        }
        steps {
            withCredentials([usernamePassword(credentialsId: 'github', usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD')]) {
                sh '''
                    git config user.email "vishal.papan@gmail.com"
                    git config user.name "Vishal Papan"
                    BUILD_NUMBER=${BUILD_NUMBER}
                    sed -i "s|image: .*|image: vishalpapan/task-manager-app:${BUILD_NUMBER}|g" mern-stack-devops-cicd-pipeline/k8s/deployment.yaml
                    git add mern-stack-devops-cicd-pipeline/k8s/deployment.yaml
                    git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                    git push https://${GIT_USERNAME}:${GIT_PASSWORD}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                '''
            }
        }
    }
  }
}
